- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add overlay and br_netfilter to modules-load.d
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: '{{ item }}'
    state: present
    create: true
  with_items:
    - overlay
    - br_netfilter

- name: Load kernel modules
  command: "{{ item }}"
  with_items:
    - modprobe overlay
    - modprobe br_netfilter

- name: Set sysctl parameters for Kubernetes
  ansible.posix.sysctl:
    name: "{{ item }}"
    state: present
    reload: yes
    value: 1
    sysctl_file: /etc/sysctl.d/k8s.conf
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward


- name: Add overlay and br_netfilter to modules-load.d
  lineinfile:
    path: /etc/modules-load.d/crio.conf
    line: '{{ item }}'
    state: present
    create: true
  with_items:
    - overlay
    - br_netfilter

- name: Load kernel modules
  command: "{{ item }}"
  with_items:
    - modprobe overlay
    - modprobe br_netfilter

- name: Set sysctl parameters for Kubernetes
  ansible.posix.sysctl:
    name: "{{ item }}"
    state: present
    reload: yes
    value: 1
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward

- name: Load kernel modules
  command: "{{ item }}"
  with_items:
    - modprobe overlay
    - modprobe br_netfilter

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a

- name: Import GPG key
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 4D64390375060AA4

- name: add cri-o repository to package manager
  apt_repository:
    repo: 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /'
    state: present
    update_cache: yes
    filename: devel:kubic:libcontainers:stable.list

- name: Add cri-o repository to package manager
  apt_repository:
    repo: 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.23/xUbuntu_20.04/ /'
    state: present
    update_cache: yes
    filename: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:1.23.list

- name: Add GPG keys
  ansible.builtin.apt_key:
    url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.23/xUbuntu_20.04/Release.key
    keyring: /etc/apt/trusted.gpg.d/libcontainers.gpg
    state: present

- name: Add GPG keys
  ansible.builtin.apt_key:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key
    keyring: /etc/apt/trusted.gpg.d/libcontainers.gpg
    state: present

- name: Update and install crio and crio-tools
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - cri-o
    - cri-o-runc
    - cri-tools

- name: Restart service cri-o
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: crio
    enabled: true

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - kubelet
    - kubeadm
    - kubectl

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted
